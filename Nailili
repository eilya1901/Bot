import logging
from datetime import datetime
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

# Включаем логирование
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO
)

logger = logging.getLogger(__name__)

# Словарь для хранения данных о днях, отмеченных пользователями
user_calendar = {}

def start(update: Update, context: CallbackContext) -> None:
    """Отправляет сообщение с кнопками меню."""
    keyboard = [
        [InlineKeyboardButton("Календарь", callback_data='show_calendar')],
        [InlineKeyboardButton("Обновить дату", callback_data='update_date')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text('Выберите действие:', reply_markup=reply_markup)

def show_calendar(update: Update, context: CallbackContext) -> None:
    """Показывает текущую дату и отмеченные дни."""
    user_id = update.callback_query.from_user.id
    current_date = datetime.now().date()
    marked_days = user_calendar.get(user_id, [])
    
    # Формируем сообщение с текущей датой и отмеченными днями
    calendar_message = f"Текущая дата: {current_date}\nОтмеченные дни: {', '.join(map(str, marked_days)) if marked_days else 'Нет отмеченных'}"
    
    update.callback_query.edit_message_text(text=calendar_message)

def update_date(update: Update, context: CallbackContext) -> None:
    """Обновляет текущую дату и предлагает кнопки выбора времени суток."""
    keyboard = [
        [InlineKeyboardButton("Утро", callback_data='mark_morning')],
        [InlineKeyboardButton("День", callback_data='mark_day')],
        [InlineKeyboardButton("Вечер", callback_data='mark_evening')],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.callback_query.edit_message_text('Выберите время суток:', reply_markup=reply_markup)

def mark_time_of_day(update: Update, context: CallbackContext) -> None:
    """Помечает выбранное время суток и проверяет, если все отмечены."""
    user_id = update.callback_query.from_user.id
    current_date = datetime.now().date()
    user_marked = user_calendar.setdefault(user_id, [])
    
    time_of_day = update.callback_query.data.split('_')[1]
    if time_of_day == 'morning':
        user_marked.append('Утро')
    elif time_of_day == 'day':
        user_marked.append('День')
    elif time_of_day == 'evening':
        user_marked.append('Вечер')

    # Проверяем, отмечены ли все три времени суток
    if len(user_marked) == 3:
        # Если все три времени отмечены, печатаем зеленым цветом
        marked_message = f"Дата {current_date} отмечена!"
        # Сбрасываем отметки для пользователя
        user_calendar[user_id] = []
    else:
        marked_message = f"Вы отметили: {', '.join(user_marked)}"
    
    # Обновляем сообщение
    update.callback_query.edit_message_text(marked_message)

def main() -> None:
    """Запуск бота."""
    # Вставьте свой токен здесь
    updater = Updater("8052397705:AAHWXlfKa2KMQMOuH_1NroB5Qmp3eSkyLe4")

    dispatcher = updater.dispatcher

    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CallbackQueryHandler(show_calendar, pattern='show_calendar'))
    dispatcher.add_handler(CallbackQueryHandler(update_date, pattern='update_date'))
    dispatcher.add_handler(CallbackQueryHandler(mark_time_of_day, pattern='mark_.*'))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()

pip install python-telegram-bot --upgrade
